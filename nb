#!/bin/sh

# nb - simple notebook manager

nb_fatal_error() {
	echo "nb: "
	while [ $# -gt 0 ]; do echo "$1"; shift; done
	exit 1
}

nb_browse() {
	cd "${NB_PATH}"
	file="$(find . -name '.git*' -prune -o -type f | cut -d"/" -f2-  | ${FUZZER})"
	[ "${file}" != "" ] && {
		echo "${file}" >> ${NB_HIST}
		${EDITOR} "${file}";
	}
}

nb_recent() {
	cd "${NB_PATH}"
	if [ -f "${NB_HIST}" ]; then
		file="$(cat "${NB_HIST}" | tail -n 1)"
		test -f "${file}" && {
			${EDITOR} "${file}";
			exit 0;
		}
	fi
	nb_fatal_error "No recent history"
}

nb_sync() {
	which git >/dev/null 2>/dev/null || nb_fatal_error "git not available, cannot sync"
	cd "${NB_PATH}"
	git fetch
	git add "${NB_PATH}"
	if [ -n "$1" ]; then
		git commit -m "$1"
	else
		git commit -m "$(uname)"
	fi
	git pull
	#TODO check for conflicts
	# if conflict exists, checkout to a
	# different unique branch
	# And pull after fetch seems
	# redundant, replace with merge
	git push
}

nb_new() {
	[ -n "$1" ] || nb_fatal_error "usage: nb new < <-c|-m> files... | filename >"
	if [ $# -gt 1 ]; then case "$1" in
		-c) shift; cp -v "$@" "$NB_PATH/" ;;
		-m) shift; mv -v "$@" "$NB_PATH/" ;;
		*) [ -n "$1" ] && nb_fatal_error "unknown command -- $@" "usage: nb new <-c|-m> files..." ;;
	esac; fi
	[ $? -ne 0 ] && exit 1;
	if ${EDITOR} "${NB_PATH}/$1"; then
		echo "${file}" >> "${NB_HIST}"
	fi
}

nb_usage() {
	[ -n "$1" ] && echo "$0: Unknown command $1"
	printf 'Usage: nb [OPTIONS]
  n, new < <-c|-m> files... | filetocreate >
                  Creates filetocreate in $NB_PATH directory with $EDITOR
                  if -c option, files are copied to $NB_PATH
                  if -m option, files are moved to $NB_PATH
  s, sync [ "message" ]
                  Attempts a pull/commit/push cycle in $NB_PATH
                  if "message" is present, commit with "message"
  r, recent       Open the last file that was accessed
  h, help         Prints this help message
'
}

test -z "${EDITOR}" && { export EDITOR=vi; }
# TODO detect windows, type on windows invokes a different command
which "${EDITOR}" >/dev/null 2>/dev/null || { export EDITOR=cat; }
XDG_DATA_HOME="${XDG_DATA_HOME:=$HOME}"
NB_PATH="${NB_PATH:=$XDG_DATA_HOME/notes}"

: ${XDG_DATA_HOME:=$HOME/.local/share}
: ${NB_PATH:=$XDG_DATA_HOME/notes}
: ${NB_HIST:="$NB_PATH/.nbhistory"}

test -d "${NB_PATH}" || { nb_fatal_error "NB_PATH: ${NB_PATH} is not a directory"; exit 1; }
nb_option=${1}
[ $# -ge 1 ] && shift
case $nb_option in
	'') nb_browse ;;
	n|new) nb_new "$@" ;;
	s|sync) nb_sync "$@" ;;
	r|recent) nb_recent ;;
	h|help) nb_usage ;;
	*) nb_usage "$@" ;;
esac
